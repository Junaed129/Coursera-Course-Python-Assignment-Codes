#Assignment 6.5
#6.5 Write code using find() and string slicing (see section 6.10) to extract the number at the end of the line below. Convert the 
#extracted value to a floating point number and print it out.

text = "X-DSPAM-Confidence: 0.8475"
pos=text.find(':')
print(float(text[pos+2:]))

#Assignment 7.1
#7.1 Write a program that prompts for a file name, then opens that file and reads through the file, and print the contents of the file in upper case.
#Use the file words.txt to produce the output below.You can download the sample data at http://www.py4e.com/code3/words.txt
# Use words.txt as the file name

fname = input("Enter file name: ")
fh = open(fname)
inp = fh.read()
upper_inp=inp.upper()
print(upper_inp.rstrip())

#Assignment 7.2
#7.2 Write a program that prompts for a file name, then opens that file and reads through the file, looking for lines of the form:
#X-DSPAM-Confidence:    0.8475 Count these lines and extract the floating point values from each of the lines and compute the average 
#of those values and produce an output as shown below. Do not use the sum() function or a variable named sum in your solution.
#You can download the sample data at http://www.py4e.com/code3/mbox-short.txt
# Use the file name mbox-short.txt as the file name

fname = input("Enter file name: ")
fh = open(fname)
s=0;
c = 0
for line in fh:
    if not line.startswith("X-DSPAM-Confidence:"):
        continue
    c=c+1
    pos=line.find('0')
    n=line[pos:]
    s=s+float(n)
avg = s/c
print("Average spam confidence:",avg)

#Assignment 8.4
#8.4 Open the file romeo.txt and read it line by line. For each line, split the line into a list of words using the split() method. 
#The program should build a list of words. For each word on each line check to see if the word is already in the list and if not 
#append it to the list. When the program completes, sort and print the resulting words in alphabetical order.

fname = input("Enter file name: ")
fh = open(fname)
lst = list()
for line in fh:
    word = line.split()
    for i in range(len(word)):
        if word[i] not in lst:
            lst.append(word[i])
lst.sort()
print(lst)

#Assignment 8.5
#8.5 Open the file mbox-short.txt and read it line by line. When you find a line that starts with 'From ' like the following line:
#From stephen.marquard@uct.ac.za Sat Jan  5 09:14:16 2008 You will parse the From line using split() and print out the second word 
#in the line (i.e. the entire address of the person who sent the message). Then print out a count at the end.
#Hint: make sure not to include the lines that start with 'From:'. Also look at the last line of the sample output to see how to print the count.
#You can download the sample data at http://www.py4e.com/code3/mbox-short.txt

fname = input("Enter file name: ")
if len(fname) < 1 : fname = "mbox-short.txt"
fh = open(fname)
count = 0
for line in fh:
    line = line.rstrip()
    if line == " " : 
        continue
    if line.startswith('From'): 
        words = line.split()
        if(len(words)) > 2:
             print (words[1])
             count = count+1

print ("There were", count, "lines in the file with From as the first word")


#Assignment 9.4
#9.4 Write a program to read through the mbox-short.txt and figure out who has sent the greatest number of mail messages. 
#The program looks for 'From ' lines and takes the second word of those lines as the person who sent the mail. The program 
#creates a Python dictionary that maps the sender's mail address to a count of the number of times they appear in the file. 
#After the dictionary is produced, the program reads through the dictionary using a maximum loop to find the most prolific committer.

handle = open("mbox-short.txt")
counts = dict()
for line in handle:
    line.rstrip()
    if line.startswith('From '):
        words = line.split()
        counts[words[1]]=counts.get(words[1],0)+1
print(counts)
bigcount = None
bigword = None
for word,count in counts.items():
    if bigcount is None or count > bigcount:
        bigword = word
        bigcount = count       
print(bigword,bigcount)
